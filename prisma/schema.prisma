generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["cadastro", "academico", "financeiro"]
}

enum Genero {
  M
  F

  @@schema("cadastro")
}

model Aluno {
  id              Int      @id @default(autoincrement())
  nomeCompleto    String   @map("nome_completo") @db.VarChar(100)
  nomeCompletoPai String   @map("nome_completo_pai") @db.VarChar(100)
  nomeCompletoMae String   @map("nome_completo_mae") @db.VarChar(100)
  numeroBi        String   @unique @map("numero_bi") @db.VarChar(14)
  dataNascimento  DateTime @map("data_nascimento") @db.Date
  genero          Genero

  Endereco     AlunoEndereco?
  Contacto     AlunoContacto?
  Responsaveis Responsavel[]
  Matricula    Matricula[]
  Pagamento    Pagamento[]
  AlunoNota    Nota[]

  @@map("alunos")
  @@schema("cadastro")
}

model AlunoEndereco {
  id         Int    @id @default(autoincrement())
  alunoId    Int    @unique @map("aluno_id")
  bairro     String @db.VarChar(30)
  rua        String @db.VarChar(50)
  numeroCasa String @map("numero_casa") @db.VarChar(5)

  Aluno Aluno @relation(fields: [alunoId], references: [id], onDelete: Cascade)

  @@index([bairro])
  @@map("alunos_enderecos")
  @@schema("cadastro")
}

model AlunoContacto {
  id       Int     @id @default(autoincrement())
  alunoId  Int     @unique @map("aluno_id")
  telefone String  @unique @db.VarChar(9)
  email    String? @unique @db.VarChar(255)

  Aluno Aluno @relation(fields: [alunoId], references: [id], onDelete: Cascade)

  @@map("alunos_contactos")
  @@schema("cadastro")
}

model Responsavel {
  id           Int    @id @default(autoincrement())
  alunoId      Int    @map("aluno_id")
  nomeCompleto String @map("nome_completo") @db.VarChar(100)
  parentescoId Int    @map("parentesco_id") @db.SmallInt

  Aluno      Aluno                @relation(fields: [alunoId], references: [id], onDelete: Cascade)
  Parentesco Parentesco           @relation(fields: [parentescoId], references: [id], onDelete: Cascade)
  Endereco   ResponsavelEndereco?
  Contacto   ResponsavelContacto?

  @@index([alunoId, nomeCompleto])
  @@map("responsaveis")
  @@schema("cadastro")
}

model Parentesco {
  id          Int           @id @default(autoincrement()) @db.SmallInt
  nome        String        @unique @db.VarChar(30)
  Responsavel Responsavel[]

  @@map("parentescos")
  @@schema("cadastro")
}

model ResponsavelEndereco {
  id            Int    @id @default(autoincrement())
  responsavelId Int    @unique @map("responsavel_id")
  bairro        String @db.VarChar(30)
  rua           String @db.VarChar(50)
  numeroCasa    String @map("numero_casa") @db.VarChar(5)

  Responsavel Responsavel @relation(fields: [responsavelId], references: [id], onDelete: Cascade)

  @@index([bairro])
  @@map("responsaveis_enderecos")
  @@schema("cadastro")
}

model ResponsavelContacto {
  id            Int     @id @default(autoincrement())
  responsavelId Int     @unique @map("responsavel_id")
  telefone      String  @unique @db.VarChar(9)
  email         String? @unique @db.VarChar(255)
  outros        String? @db.VarChar(255)

  Responsavel Responsavel @relation(fields: [responsavelId], references: [id], onDelete: Cascade)

  @@map("responsaveis_contactos")
  @@schema("cadastro")
}

model Professor {
  id             Int      @id @default(autoincrement())
  nomeCompleto   String   @map("nome_completo") @db.VarChar(100)
  dataNascimento DateTime @map("data_nascimento") @db.Date

  Contacto                  ProfessorContacto?
  DisciplinasProfessores    ProfessorDisciplina[]
  ProfessorDisciplinaClasse ProfessorDisciplinaClasse[]

  @@index([nomeCompleto])
  @@map("professores")
  @@schema("cadastro")
}

model ProfessorContacto {
  id          Int     @id @default(autoincrement())
  professorId Int     @unique @map("professor_id")
  telefone    String  @unique @db.VarChar(9)
  email       String? @unique @db.VarChar(255)
  outros      String? @db.VarChar(255)

  Professor Professor @relation(fields: [professorId], references: [id], onDelete: Cascade)

  @@map("professores_contactos")
  @@schema("cadastro")
}

model Curso {
  id        Int    @id @default(autoincrement()) @db.SmallInt
  nome      String @unique @db.VarChar(50)
  descricao String @db.Text
  duracao   Int    @db.SmallInt

  Classe Classe[]

  @@map("cursos")
  @@schema("cadastro")
}

model Disciplina {
  id        Int    @id @default(autoincrement())
  nome      String @unique @db.VarChar(50)
  descricao String @db.Text

  DisciplinasProfessores    ProfessorDisciplina[]
  ProfessorDisciplinaClasse ProfessorDisciplinaClasse[]
  AlunoNota                 Nota[]
  ClasseDisciplinas         ClasseDisciplinas[]

  @@map("disciplinas")
  @@schema("cadastro")
}

model ProfessorDisciplina {
  disciplinaId Int @map("disciplina_id")
  professorId  Int @map("professor_id")

  Disciplina Disciplina @relation(fields: [disciplinaId], references: [id], onDelete: Cascade)
  Professor  Professor  @relation(fields: [professorId], references: [id], onDelete: Cascade)

  @@id([disciplinaId, professorId])
  @@map("professor_disciplinas")
  @@schema("cadastro")
}

model ProfessorDisciplinaClasse {
  professorId  Int @map("professor_id")
  disciplinaId Int @map("disciplina_id")
  classeId     Int @map("classe_id")
  turmaId      Int @map("turma_id")

  Professor  Professor  @relation(fields: [professorId], references: [id], onDelete: Cascade)
  Disciplina Disciplina @relation(fields: [disciplinaId], references: [id], onDelete: Cascade)
  Classe     Classe     @relation(fields: [classeId], references: [id], onDelete: Cascade)
  Turma      Turma      @relation(fields: [turmaId], references: [id], onDelete: Cascade)

  @@id([professorId, disciplinaId, classeId, turmaId])
  @@map("professor_disciplina_classes")
  @@schema("academico")
}

model AnoLectivo {
  id              Int      @id @default(autoincrement()) @db.SmallInt
  nome            String   @unique @db.VarChar(9)
  inicio          DateTime @db.Date
  termino         DateTime @db.Date
  activo          Boolean  @default(false)
  matriculaAberta Boolean  @default(false) @map("matricula_aberta")

  Classe    Classe[]
  Matricula Matricula[]
  Pagamento Pagamento[]
  Trimestre Trimestre[]

  @@index([activo])
  @@map("ano_lectivos")
  @@schema("cadastro")
}

model Trimestre {
  id           Int      @id @default(autoincrement()) @db.SmallInt
  anoLectivoId Int      @map("ano_lectivo_id")
  numero       Int      @db.SmallInt
  inicio       DateTime @db.Date
  termino      DateTime @db.Date

  AnoLectivo AnoLectivo @relation(fields: [anoLectivoId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  AlunoNota  Nota[]

  @@unique([anoLectivoId, numero])
  @@map("trimestres")
  @@schema("academico")
}

model Classe {
  id             Int     @id @default(autoincrement())
  nome           String  @db.VarChar(15)
  ordem          Int     @db.SmallInt
  anoLectivoId   Int     @map("ano_lectivo_id") @db.SmallInt
  cursoId        Int     @map("curso_id") @db.SmallInt
  valorMatricula Decimal @map("valor_matricula") @db.Decimal(10, 2)

  AnoLectivo                AnoLectivo                  @relation(fields: [anoLectivoId], references: [id], onDelete: Cascade)
  Curso                     Curso                       @relation(fields: [cursoId], references: [id], onDelete: Cascade)
  Turma                     Turma[]
  Matricula                 Matricula[]
  ProfessorDisciplinaClasse ProfessorDisciplinaClasse[]
  AlunoNota                 Nota[]
  ClasseDisciplinas         ClasseDisciplinas[]

  @@unique([nome, anoLectivoId, cursoId])
  @@unique([cursoId, ordem])
  @@map("classes")
  @@schema("cadastro")
}

model ClasseDisciplinas {
  classeId     Int
  disciplinaId Int @db.SmallInt

  Classe     Classe     @relation(fields: [classeId], references: [id], onDelete: Cascade)
  Disciplina Disciplina @relation(fields: [disciplinaId], references: [id], onDelete: Cascade)

  @@id([classeId, disciplinaId])
  @@map("classe_disciplinas")
  @@schema("cadastro")
}

model Sala {
  id          Int    @id @default(autoincrement()) @db.SmallInt
  nome        String @unique @db.VarChar(30)
  capacidade  Int    @db.SmallInt
  localizacao String @db.VarChar(255)

  Turma Turma[]

  @@map("salas")
  @@schema("cadastro")
}

model Turno {
  id      Int    @id @default(autoincrement()) @db.SmallInt
  nome    String @unique @db.VarChar(30)
  inicio  String @db.VarChar(8)
  termino String @db.VarChar(8)

  Turma Turma[]

  @@unique([inicio, termino])
  @@map("turnos")
  @@schema("cadastro")
}

model Turma {
  id       Int    @id @default(autoincrement())
  nome     String @db.VarChar(30)
  classeId Int    @map("classe_id")
  salaId   Int    @map("sala_id") @db.SmallInt
  turnoId  Int    @db.SmallInt

  Classe                    Classe                      @relation(fields: [classeId], references: [id], onDelete: Cascade)
  Sala                      Sala                        @relation(fields: [salaId], references: [id], onDelete: Cascade)
  Turno                     Turno                       @relation(fields: [turnoId], references: [id], onDelete: Cascade)
  Matricula                 Matricula[]
  ProfessorDisciplinaClasse ProfessorDisciplinaClasse[]

  @@unique([nome, classeId, salaId, turnoId])
  @@map("turmas")
  @@schema("cadastro")
}

model Matricula {
  id           Int      @id @default(autoincrement())
  alunoId      Int      @map("aluno_id")
  classeId     Int      @map("classe_id")
  turmaId      Int      @map("turma_id")
  anoLectivoId Int      @map("ano_lectivo_id") @db.SmallInt
  createdAt    DateTime @default(now()) @map("created_at")
  // TODO: ADD THE USER WHO CREATED THE MATRICULA

  Aluno      Aluno      @relation(fields: [alunoId], references: [id], onDelete: Cascade)
  Classe     Classe     @relation(fields: [classeId], references: [id], onDelete: Cascade)
  Turma      Turma      @relation(fields: [turmaId], references: [id], onDelete: Cascade)
  AnoLectivo AnoLectivo @relation(fields: [anoLectivoId], references: [id], onDelete: Cascade)

  @@unique([alunoId, classeId, anoLectivoId])
  @@map("matriculas")
  @@schema("academico")
}

enum TipoPagamento {
  Propina
  Matricula
  Confirmacao

  @@schema("financeiro")
}

model Pagamento {
  id                Int           @id @default(autoincrement())
  alunoId           Int           @map("aluno_id")
  tipoPagamento     TipoPagamento @map("tipo_pagamento")
  valor             Decimal       @db.Decimal(10, 2)
  descricao         String?       @db.VarChar(255)
  metodoPagamentoId Int           @map("metodo_pagamento_id") @db.SmallInt
  anoLectivoId      Int           @map("ano_lectivo_id") @db.SmallInt
  createdAt         DateTime      @default(now()) @map("created_at")

  Aluno           Aluno           @relation(fields: [alunoId], references: [id], onDelete: Cascade)
  MetodoPagamento MetodoPagamento @relation(fields: [metodoPagamentoId], references: [id], onDelete: Cascade)
  AnoLectivo      AnoLectivo      @relation(fields: [anoLectivoId], references: [id], onDelete: Cascade)

  @@map("pagamentos")
  @@schema("financeiro")
}

model MetodoPagamento {
  id   Int    @id @default(autoincrement()) @db.SmallInt
  nome String @unique @db.VarChar(50)

  Pagamento Pagamento[]

  @@map("metodos_pagamento")
  @@schema("financeiro")
}

model Nota {
  alunoId      Int     @map("aluno_id")
  classeId     Int     @map("classe_id")
  disciplinaId Int     @map("disciplina_id")
  trimestreId  Int     @map("trimestre_id")
  nota         Decimal @db.Decimal(3, 1)

  Aluno      Aluno      @relation(fields: [alunoId], references: [id], onDelete: Cascade)
  Classe     Classe     @relation(fields: [classeId], references: [id], onDelete: Cascade)
  Disciplina Disciplina @relation(fields: [disciplinaId], references: [id], onDelete: Cascade)
  Trimestre  Trimestre  @relation(fields: [trimestreId], references: [id], onDelete: Cascade)

  @@id([alunoId, classeId, disciplinaId, trimestreId])
  @@map("notas")
  @@schema("academico")
}
